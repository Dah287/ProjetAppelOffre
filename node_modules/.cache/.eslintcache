[{"C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\index.js":"1","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\App.js":"2","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\HeaderComponent.js":"4","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\FooterComponent.js":"5","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\AddEmployeeComponent.js":"6","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\ListEmployeeComponent.js":"7","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\services\\EmployeeService.js":"8","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\ListAppelOffreComponent.js":"9","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\services\\AppelOffreService.js":"10","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\AddAppelOffreComponent.js":"11","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\DashboardAppelOffreComponent.js":"12","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\LoginComponent.js":"13","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\ListAppelOffreParEntiteComponent.js":"14"},{"size":546,"mtime":1735853235885,"results":"15","hashOfConfig":"16"},{"size":2479,"mtime":1737715079464,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1735853236059,"results":"18","hashOfConfig":"16"},{"size":3076,"mtime":1738232933790,"results":"19","hashOfConfig":"16"},{"size":295,"mtime":1735853236462,"results":"20","hashOfConfig":"16"},{"size":4562,"mtime":1735916124041,"results":"21","hashOfConfig":"16"},{"size":3098,"mtime":1736024844073,"results":"22","hashOfConfig":"16"},{"size":712,"mtime":1736329922230,"results":"23","hashOfConfig":"16"},{"size":11138,"mtime":1738232604338,"results":"24","hashOfConfig":"16"},{"size":1596,"mtime":1738230359098,"results":"25","hashOfConfig":"16"},{"size":16903,"mtime":1738233039652,"results":"26","hashOfConfig":"16"},{"size":4037,"mtime":1737534863304,"results":"27","hashOfConfig":"16"},{"size":2633,"mtime":1736495402697,"results":"28","hashOfConfig":"16"},{"size":7136,"mtime":1737533306962,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"13u8ora",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},"C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\index.js",[],["64","65"],"C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\App.js",["66","67","68","69","70"],"import './App.css';\nimport {BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport FooterComponent from './components/FooterComponent';\nimport HeaderComponent from './components/HeaderComponent';\nimport ListEmployeeComponent from './components/ListEmployeeComponent';\nimport AddEmployeeComponent from './components/AddEmployeeComponent';\nimport ListAppelOffreComponent from './components/ListAppelOffreComponent';\nimport AddAppelOffreComponent from './components/AddAppelOffreComponent';\nimport DashboardAppelOffreComponent from './components/DashboardAppelOffreComponent';\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom';\nimport LoginComponent from './components/LoginComponent';\nimport ListAppelOffreParEntiteComponent from './components/ListAppelOffreParEntiteComponent';\n\nfunction App() {\n\n  const isAuthenticated = !!localStorage.getItem('user'); // Vérifie si l'utilisateur est connecté\n\n  return (\n    <div>\n{/* <Router>\n<HeaderComponent/>\n      <ListAppelOffreComponent/>\n<FooterComponent/>    \n</Router>   */}\n      <Router>\n        <HeaderComponent />\n        <div className= \"container-fluid\">\n          {/* <Switch>\n              <Route exact path = \"/\" component = {ListAppelOffreComponent}></Route>\n              <Route path = \"/appelOffres\" component = {ListAppelOffreComponent}></Route>\n              <Route path = \"/add-appeloffre\" component = {AddAppelOffreComponent} ></Route>\n              <Route path = \"/edit-employee/:id\" component = {AddAppelOffreComponent}></Route>\n              <Route path = \"/dashboard\" component = {DashboardAppelOffreComponent}></Route>\n            </Switch> */}\n              <Switch>\n\n              <Route exact path = \"/\" component = {LoginComponent}></Route>\n              <Route path = \"/appelOffres\" component = {ListAppelOffreComponent}></Route>\n              <Route path = \"/add-appeloffre/:entt\" component = {AddAppelOffreComponent} ></Route>\n              <Route path = \"/edit-employee/:id/:entitee\" component = {AddAppelOffreComponent}></Route>\n              <Route path = \"/dashboard\" component = {DashboardAppelOffreComponent}></Route>\n              <Route path = \"/login\" component = {LoginComponent}></Route>\n              <Route path = \"/ListAppelOffreParEntite/:entitee\" component = {ListAppelOffreParEntiteComponent}></Route>\n\n            </Switch>\n            {/* <FooterComponent /> */}\n        </div>        \n       \n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\HeaderComponent.js",["71"],"C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\FooterComponent.js",[],"C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\AddEmployeeComponent.js",["72"],"import React, {useState, useEffect} from 'react'\nimport {Link, useHistory, useParams } from 'react-router-dom';\nimport EmployeeService from '../services/EmployeeService'\n\nconst AddEmployeeComponent = () => {\n\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [emailId, setEmailId] = useState('')\n    const history = useHistory();\n    const {id} = useParams();\n\n    const saveOrUpdateEmployee = (e) => {\n        e.preventDefault();\n\n        const employee = {firstName, lastName, emailId}\n\n        if(id){\n            EmployeeService.updateEmployee(id, employee).then((response) => {\n                history.push('/employees')\n            }).catch(error => {\n                console.log(error)\n            })\n\n        }else{\n            EmployeeService.createEmployee(employee).then((response) =>{\n\n                console.log(response.data)\n    \n                history.push('/employees');\n    \n            }).catch(error => {\n                console.log(error)\n            })\n        }\n        \n    }\n\n    useEffect(() => {\n\n        EmployeeService.getEmployeeById(id).then((response) =>{\n            setFirstName(response.data.firstName)\n            setLastName(response.data.lastName)\n            setEmailId(response.data.emailId)\n        }).catch(error => {\n            console.log(error)\n        })\n    }, [])\n\n    const title = () => {\n\n        if(id){\n            return <h2 className = \"text-center\">Update Employee</h2>\n        }else{\n            return <h2 className = \"text-center\">Add Employee</h2>\n        }\n    }\n\n    return (\n        <div>\n           <br /><br />\n           <div className = \"container\">\n                <div className = \"row\">\n                    <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                       {\n                           title()\n                       }\n                        <div className = \"card-body\">\n                            <form>\n                                <div className = \"form-group mb-2\">\n                                    <label className = \"form-label\"> First Name :</label>\n                                    <input\n                                        type = \"text\"\n                                        placeholder = \"Enter first name\"\n                                        name = \"firstName\"\n                                        className = \"form-control\"\n                                        value = {firstName}\n                                        onChange = {(e) => setFirstName(e.target.value)}\n                                    >\n                                    </input>\n                                </div>\n\n                                <div className = \"form-group mb-2\">\n                                    <label className = \"form-label\"> Last Name :</label>\n                                    <input\n                                        type = \"text\"\n                                        placeholder = \"Enter last name\"\n                                        name = \"lastName\"\n                                        className = \"form-control\"\n                                        value = {lastName}\n                                        onChange = {(e) => setLastName(e.target.value)}\n                                    >\n                                    </input>\n                                </div>\n\n                                <div className = \"form-group mb-2\">\n                                    <label className = \"form-label\"> Email Id :</label>\n                                    <input\n                                        type = \"email\"\n                                        placeholder = \"Enter email Id\"\n                                        name = \"emailId\"\n                                        className = \"form-control\"\n                                        value = {emailId}\n                                        onChange = {(e) => setEmailId(e.target.value)}\n                                    >\n                                    </input>\n                                </div>\n\n                                <button className = \"btn btn-success\" onClick = {(e) => saveOrUpdateEmployee(e)} >Submit </button>\n                                <Link to=\"/employees\" className=\"btn btn-danger\"> Cancel </Link>\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n\n           </div>\n\n        </div>\n    )\n}\n\nexport default AddEmployeeComponent\n","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\ListEmployeeComponent.js",["73"],"import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom/cjs/react-router-dom'\nimport EmployeeService from '../services/EmployeeService'\n\nconst ListEmployeeComponent = () => {\n\n    const [entiteF, setEntiteF] = useState('')\n    const [typeMarcheF, settypeMarcheF] = useState('')\n\n    const [employees, setEmployees] = useState([])\n\n    useEffect(() => {\n\n        getAllEmployees(entiteF,typeMarcheF);\n        setEntiteF(entiteF)\n        settypeMarcheF(typeMarcheF)\n\n    }, [])\n\n    const getAllEmployees = (entiteF,typeMarcheF) => {\n        EmployeeService.getAllEmployees(entiteF,typeMarcheF).then((response) => {\n            setEmployees(response.data)\n            console.log(response.data);\n        }).catch(error =>{\n            console.log(error);\n        })\n    }\n\n    \n\n    const deleteEmployee = (employeeId) => {\n       EmployeeService.deleteEmployee(employeeId).then((response) =>{\n        getAllEmployees();\n\n       }).catch(error =>{\n           console.log(error);\n       })\n        \n    }\n\n    return (\n        <div className = \"container\">\n            <h2 className = \"text-center\"> List Employees </h2>\n            <Link to = \"/add-appelOffre\" className = \"btn btn-primary mb-2\" > Add Employee </Link>\n            {/*  */}\n            <div>\n        <input\n          type=\"text\"\n          name=\"entite\"\n          placeholder=\"Filtrer par Entité\"\n          value = {entiteF}\n          onChange = {(e) => setEntiteF(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          name=\"typeMarche\"\n          placeholder=\"Filtrer par Type de Marché\"\n          value = {typeMarcheF}\n          onChange = {(e) => settypeMarcheF(e.target.value)}\n        />\n      </div>\n            {/*  */}\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                    <th> Employee Id </th>\n                    <th> Employee First Name </th>\n                    <th> Employee Last Name </th>\n                    <th> Employee Email Id </th>\n                    <th> Actions </th>\n                </thead>\n                <tbody>\n                    {\n                        employees.map(\n                            employee =>\n                            <tr key = {employee.id}> \n                                <td> {employee.id} </td>\n                                <td> {employee.firstName} </td>\n                                <td>{employee.lastName}</td>\n                                <td>{employee.emailId}</td>\n                                <td>\n                                    <Link className=\"btn btn-info\" to={`/edit-employee/${employee.id}`} >Update</Link>\n                                    <button className = \"btn btn-danger\" onClick = {() => deleteEmployee(employee.id)}\n                                    style = {{marginLeft:\"10px\"}}> Delete</button>\n                                </td>\n                            </tr>\n                        )\n                    }\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default ListEmployeeComponent\n","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\services\\EmployeeService.js",[],"C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\ListAppelOffreComponent.js",["74","75","76"],"C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\services\\AppelOffreService.js",[],"C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\AddAppelOffreComponent.js",["77","78","79"],"C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\DashboardAppelOffreComponent.js",[],"C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\LoginComponent.js",["80","81"],"import axios from 'axios';\r\nimport React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport AppelOffreService from '../services/AppelOffreService';\r\n\r\nconst LoginComponent = () => {\r\n\r\n\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const history = useHistory(); // Hook pour naviguer\r\n\r\n    const user = {username, password}; \r\n\r\n\r\n    const loginf = (e) => {\r\n        e.preventDefault();\r\n\r\n        const utilisateuropt = {username, password}\r\n\r\n    \r\n            AppelOffreService.login(utilisateuropt).then((response) => {\r\n                console.log(response.data)\r\n                if(response.data=== \"admin\"){\r\n                  localStorage.setItem('user', JSON.stringify({ username, role: 'admin' }));\r\n                    history.push('/appelOffres')\r\n                }\r\n                else if(response.data=== \"no\"){\r\n                  setMessage(\"mot de pass ou username incorct\")\r\n                }else{\r\n                  let entitee = response.data;\r\n                  setMessage(\"vert \" +entitee)\r\n                  localStorage.setItem('user', JSON.stringify({ username, role: 'user', entitee }));\r\n                  history.push(`/ListAppelOffreParEntite/${entitee}`);\r\n                  \r\n             //     <Link className=\"btn btn-info\" to={`/edit-employee/${employee.id}`} >Update</Link>\r\n                }\r\n               \r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n        \r\n        \r\n    }\r\n\r\n  return (\r\n\r\n    \r\n    <div className=\"login-container\">\r\n        <br></br>\r\n        \r\n      <h2>Connexion</h2>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label>Nom d'utilisateur</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Mot de passe</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button\r\n          className=\"btn btn-success\"\r\n          onClick={(e) => loginf(e)}\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n      <br></br>\r\n      {message && <p style={{ color: \"red\" }}>{message}</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginComponent\r\n","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\ListAppelOffreParEntiteComponent.js",["82"],"\r\nimport React, {useState, useEffect} from 'react'\r\nimport AppelOffreService from '../services/AppelOffreService'\r\nimport { Link ,useHistory,useParams} from 'react-router-dom'\r\nconst ListAppelOffreParEntiteComponent = () => {\r\n\r\n\r\n\r\nconst [typeMarcheF, settypeMarcheF] = useState('')\r\n\r\nconst [appelOffre, setAppelOffre] = useState([])\r\n\r\nconst {entitee} = useParams();\r\n\r\n  useEffect(() => {\r\n    \r\n        getAllAppelOffre(entitee,typeMarcheF);\r\n        \r\n    }, [entitee,typeMarcheF])\r\n\r\n    const getAllAppelOffre = (entiteF,typeMarcheF) => {\r\n        AppelOffreService.getAllAppelOffre(entiteF,typeMarcheF).then((response) => {\r\n            setAppelOffre(response.data)\r\n            console.log(entiteF);\r\n            console.log(typeMarcheF);\r\n        }).catch(error =>{\r\n            console.log(error);\r\n        })\r\n    } \r\n\r\n    const deleteappelOffre = (appelOffreId) => {\r\n        // Afficher une boîte de dialogue de confirmation\r\n        const confirmation = window.confirm(\"Êtes-vous sûr de vouloir supprimer cet appel d'offre ?\");\r\n    \r\n        // Si l'utilisateur confirme la suppression\r\n        if (confirmation) {\r\n            AppelOffreService.deleteappelOffre(appelOffreId)\r\n                .then((response) => {\r\n                    // Recharger la liste des appels d'offre après la suppression\r\n                    getAllAppelOffre(entitee, typeMarcheF);\r\n    \r\n                    // Rediriger vers la liste des appels d'offre\r\n                    history.push(`/ListAppelOffreParEntite/${entitee}`);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        } else {\r\n            // Si l'utilisateur annule, ne rien faire\r\n            console.log(\"Suppression annulée.\");\r\n        }\r\n    };\r\n    const isValidDate = (date) => {\r\n        // Vérifie si la date est valide\r\n        if(date!=null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n      };\r\n\r\n      const history = useHistory();\r\n\r\n\r\n  return (\r\n    \r\n    <div className=\"container-fluid\">\r\n    <h2 className=\"text-center\">List Appel Offre : {entitee}</h2>\r\n\r\n    {/* Filtres */}\r\n    <div className=\"row my-3\">\r\n\r\n        <div className=\"col-5\">\r\n            <select\r\n                className=\"form-select\"\r\n                value={typeMarcheF}\r\n                onChange={(e) => settypeMarcheF(e.target.value)}\r\n            >\r\n                <option selected>TYPE MARCHE</option>\r\n                <option value=\"F\">Fourniture</option>\r\n                <option value=\"S\">Service</option>\r\n                <option value=\"T\">Travaux</option>\r\n            </select>\r\n        </div>\r\n        <div className=\"col-4\">\r\n        <div className=\"col text-end\">\r\n        <p>\r\n                <strong>\r\n                    Total des appels d'offre : <span style={{ color: 'red' }}>{appelOffre.length}</span>\r\n                </strong>\r\n                </p>\r\n                </div>\r\n        </div>\r\n        <div className=\"col text-end\">\r\n            <Link  to={`/add-appeloffre/${entitee}`} className=\"btn btn-primary\">\r\n            Ajouter AO\r\n            </Link>\r\n        </div>\r\n    </div>\r\n\r\n    {/* Table */}\r\n    <div className=\"table-responsive\">\r\n    <table className=\"table table-bordered table-striped\" style={{ tableLayout: \"fixed\" }}>\r\n  <thead>\r\n    <tr>\r\n      <th style={{ textAlign: \"center\" }}>Entité</th>\r\n      <th style={{ textAlign: \"center\", width: \"550px\", whiteSpace: \"nowrap\", overflow: \"hidden\", textOverflow: \"ellipsis\" }}>Objet</th>\r\n      <th style={{ textAlign: \"center\",width: \"80px\" }}>Type Marché</th>\r\n      <th style={{ textAlign: \"center\" }}>Estimation</th>\r\n      <th style={{ textAlign: \"center\",width: \"80px\" }}>PME</th>\r\n      <th style={{ textAlign: \"center\" }}>Publication PREV</th>\r\n      <th style={{ textAlign: \"center\" }}>Transmis BAM</th>\r\n      <th style={{ textAlign: \"center\" }}>Transmis CE</th>\r\n      <th style={{ textAlign: \"center\" }}>Observation MC</th>\r\n      <th style={{ textAlign: \"center\" ,width: \"60px\"}}>N° AO</th>\r\n      <th style={{ textAlign: \"center\" }}>Ouverture Reelle</th>\r\n      <th style={{ textAlign: \"center\" }}>Jugement</th>\r\n      <th style={{ textAlign: \"center\" }}>Observations</th>\r\n      <th style={{ textAlign: \"center\" ,width: \"140px\"}}>Actions</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {appelOffre\r\n      .sort((a, b) => {\r\n        const dateA = a.dateOuvertureReelle ? new Date(a.dateOuvertureReelle) : null;\r\n        const dateB = b.dateOuvertureReelle ? new Date(b.dateOuvertureReelle) : null;\r\n        const dateTransA = a.datetransmisCe ? new Date(a.datetransmisCe) : null;\r\n        const dateTransB = b.datetransmisCe ? new Date(b.datetransmisCe) : null;\r\n\r\n        if (dateA && !dateB) return -1;\r\n        if (!dateA && dateB) return 1;\r\n        if (dateA && dateB) return dateA - dateB;\r\n\r\n        if (dateTransA && !dateTransB) return -1;\r\n        if (!dateTransA && dateTransB) return 1;\r\n        if (dateTransA && dateTransB) return dateTransA - dateTransB;\r\n\r\n        return 0;\r\n      })\r\n      .map((appel) => (\r\n        <tr\r\n          key={appel.id}\r\n          style={{\r\n            backgroundColor: appel.dateOuvertureReelle\r\n              ? \"#50C878\"\r\n              : appel.datetransmisCe\r\n              ? \"#FFFF00\"\r\n              : \"white\",\r\n          }}\r\n        >\r\n          <td>{appel.entite}</td>\r\n          <td style={{ width: \"550px\", whiteSpace: \"nowrap\", overflow: \"hidden\", textOverflow: \"ellipsis\" }}>\r\n            {appel.objet}\r\n          </td>\r\n          <td>{appel.typeMarche}</td>\r\n          <td>{appel.estimation?.toLocaleString('fr-MA')}</td>\r\n          <td>{appel.pme}</td>\r\n          <td>{appel.moisPublicationPrevisionnelle}</td>\r\n          <td>{appel.dateOuverturePrevisionnelle}</td>\r\n          <td>{appel.datetransmisCe}</td>\r\n          <td>{appel.dateobservationMc}</td>\r\n          <td style={{ textAlign: \"center\" ,width: \"60px\"}}>{appel.numero}</td>\r\n          <td>{appel.dateOuvertureReelle}</td>\r\n          <td>{appel.dateJugement}</td>\r\n          <td>{appel.observations}</td>\r\n          <td style={{  alignItems: \"center\" ,width: \"160px\"}}>\r\n            <Link\r\n              className=\"btn btn-info\"\r\n              style={{\r\n                \r\n                fontSize: \"12px\",\r\n                width: \"50px\",\r\n                paddingLeft : \"1px\",\r\n                paddingRight:\"1px\"\r\n              \r\n              }}\r\n              to={`/edit-employee/${appel.id}/${entitee}`}\r\n            >\r\n              Modifier\r\n            </Link>\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => deleteappelOffre(appel.id)}\r\n              style={{\r\n                \r\n                fontSize: \"12px\",\r\n                width: \"60px\",\r\n                paddingLeft : \"1px\",\r\n                paddingRight:\"1px\",\r\n                marginLeft: \"10px\"\r\n             \r\n              }}\r\n            >\r\n              Supprimer\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      ))}\r\n  </tbody>\r\n</table>\r\n    </div>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default ListAppelOffreParEntiteComponent",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":23},{"ruleId":"87","severity":1,"message":"91","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":29},{"ruleId":"87","severity":1,"message":"92","line":6,"column":8,"nodeType":"89","messageId":"90","endLine":6,"endColumn":28},{"ruleId":"87","severity":1,"message":"93","line":10,"column":10,"nodeType":"89","messageId":"90","endLine":10,"endColumn":18},{"ruleId":"87","severity":1,"message":"94","line":16,"column":9,"nodeType":"89","messageId":"90","endLine":16,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":21,"column":21,"nodeType":"97","endLine":21,"endColumn":58},{"ruleId":"98","severity":1,"message":"99","line":48,"column":8,"nodeType":"100","endLine":48,"endColumn":10,"suggestions":"101"},{"ruleId":"98","severity":1,"message":"102","line":18,"column":8,"nodeType":"100","endLine":18,"endColumn":10,"suggestions":"103"},{"ruleId":"87","severity":1,"message":"104","line":11,"column":8,"nodeType":"89","messageId":"90","endLine":11,"endColumn":13},{"ruleId":"87","severity":1,"message":"105","line":89,"column":11,"nodeType":"89","messageId":"90","endLine":89,"endColumn":22},{"ruleId":"87","severity":1,"message":"106","line":98,"column":13,"nodeType":"89","messageId":"90","endLine":98,"endColumn":20},{"ruleId":"87","severity":1,"message":"107","line":2,"column":9,"nodeType":"89","messageId":"90","endLine":2,"endColumn":13},{"ruleId":"87","severity":1,"message":"108","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":138,"column":8,"nodeType":"100","endLine":138,"endColumn":10,"suggestions":"109"},{"ruleId":"87","severity":1,"message":"110","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":13},{"ruleId":"87","severity":1,"message":"111","line":15,"column":11,"nodeType":"89","messageId":"90","endLine":15,"endColumn":15},{"ruleId":"87","severity":1,"message":"105","line":53,"column":11,"nodeType":"89","messageId":"90","endLine":53,"endColumn":22},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'FooterComponent' is defined but never used.","Identifier","unusedVar","'ListEmployeeComponent' is defined but never used.","'AddEmployeeComponent' is defined but never used.","'Redirect' is defined but never used.","'isAuthenticated' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has missing dependencies: 'entiteF' and 'typeMarcheF'. Either include them or remove the dependency array. You can also do a functional update 'setEntiteF(e => ...)' if you only need 'entiteF' in the 'setEntiteF' call.",["115"],"'enttt' is assigned a value but never used.","'isValidDate' is assigned a value but never used.","'history' is assigned a value but never used.","'Link' is defined but never used.","'EmployeeService' is defined but never used.",["116"],"'axios' is defined but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"117","fix":"121"},"Update the dependencies array to be: [id]",{"range":"122","text":"123"},"Update the dependencies array to be: [entiteF, typeMarcheF]",{"range":"124","text":"125"},{"range":"126","text":"123"},[1371,1373],"[id]",[504,506],"[entiteF, typeMarcheF]",[5005,5007]]