[{"C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\index.js":"1","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\App.js":"2","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\HeaderComponent.js":"4","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\FooterComponent.js":"5","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\AddEmployeeComponent.js":"6","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\ListEmployeeComponent.js":"7","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\services\\EmployeeService.js":"8","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\ListAppelOffreComponent.js":"9","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\services\\AppelOffreService.js":"10","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\AddAppelOffreComponent.js":"11","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\DashboardAppelOffreComponent.js":"12","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\LoginComponent.js":"13"},{"size":546,"mtime":1735853235885,"results":"14","hashOfConfig":"15"},{"size":2249,"mtime":1736322404331,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1735853236059,"results":"17","hashOfConfig":"15"},{"size":1314,"mtime":1736240107731,"results":"18","hashOfConfig":"15"},{"size":295,"mtime":1735853236462,"results":"19","hashOfConfig":"15"},{"size":4562,"mtime":1735916124041,"results":"20","hashOfConfig":"15"},{"size":3098,"mtime":1736024844073,"results":"21","hashOfConfig":"15"},{"size":712,"mtime":1736329922230,"results":"22","hashOfConfig":"15"},{"size":7036,"mtime":1736329922230,"results":"23","hashOfConfig":"15"},{"size":1379,"mtime":1736325526444,"results":"24","hashOfConfig":"15"},{"size":14825,"mtime":1736326782627,"results":"25","hashOfConfig":"15"},{"size":2557,"mtime":1736327520071,"results":"26","hashOfConfig":"15"},{"size":2048,"mtime":1736326912301,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"13u8ora",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\index.js",[],["63","64"],"C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\App.js",["65","66","67","68","69"],"import './App.css';\nimport {BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport FooterComponent from './components/FooterComponent';\nimport HeaderComponent from './components/HeaderComponent';\nimport ListEmployeeComponent from './components/ListEmployeeComponent';\nimport AddEmployeeComponent from './components/AddEmployeeComponent';\nimport ListAppelOffreComponent from './components/ListAppelOffreComponent';\nimport AddAppelOffreComponent from './components/AddAppelOffreComponent';\nimport DashboardAppelOffreComponent from './components/DashboardAppelOffreComponent';\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom';\nimport LoginComponent from './components/LoginComponent';\n\nfunction App() {\n\n  const isAuthenticated = !!localStorage.getItem('user'); // Vérifie si l'utilisateur est connecté\n\n  return (\n    <div>\n{/* <Router>\n<HeaderComponent/>\n      <ListAppelOffreComponent/>\n<FooterComponent/>    \n</Router>   */}\n      <Router>\n        <HeaderComponent />\n        <div className= \"container-fluid\">\n          {/* <Switch>\n              <Route exact path = \"/\" component = {ListAppelOffreComponent}></Route>\n              <Route path = \"/appelOffres\" component = {ListAppelOffreComponent}></Route>\n              <Route path = \"/add-appeloffre\" component = {AddAppelOffreComponent} ></Route>\n              <Route path = \"/edit-employee/:id\" component = {AddAppelOffreComponent}></Route>\n              <Route path = \"/dashboard\" component = {DashboardAppelOffreComponent}></Route>\n            </Switch> */}\n              <Switch>\n\n              <Route exact path = \"/\" component = {LoginComponent}></Route>\n              <Route path = \"/appelOffres\" component = {ListAppelOffreComponent}></Route>\n              <Route path = \"/add-appeloffre\" component = {AddAppelOffreComponent} ></Route>\n              <Route path = \"/edit-employee/:id\" component = {AddAppelOffreComponent}></Route>\n              <Route path = \"/dashboard\" component = {DashboardAppelOffreComponent}></Route>\n              <Route path = \"/login\" component = {LoginComponent}></Route>\n            </Switch>\n            {/* <FooterComponent /> */}\n        </div>        \n       \n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\HeaderComponent.js",["70"],"import React from 'react'\nimport { Link ,useHistory} from 'react-router-dom'\nconst HeaderComponent = () => {\n    return (\n        <div>\n        <header>\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-dark px-3\">\n                <div className=\"container-fluid d-flex justify-content-between align-items-center\">\n                    {/* Logo ou titre */}\n                    <a href=\"/\" className=\"navbar-brand\">\n                        Appel d'Offre Application\n                    </a>\n\n                    {/* Liens de navigation */}\n                    <div className=\"d-flex align-items-center\">\n                                    <Link className=\"nav-link text-white mx-2\" to=\"/dashboard\"> Tableau de Bord </Link>\n                                    <Link className=\"nav-link text-white mx-2\" to=\"/appelOffres\"> Liste des Appels d'Offres </Link>                        \n                    </div>\n\n                    {/* Bouton de connexion */}\n                    <div>\n                        <a href=\"/login\" className=\"btn btn-outline-light\">\n                            Connexion\n                        </a>\n                    </div>\n                </div>\n            </nav>\n        </header>\n            <br></br><br></br>\n        </div>\n    )\n}\n\nexport default HeaderComponent\n","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\FooterComponent.js",[],"C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\AddEmployeeComponent.js",["71"],"import React, {useState, useEffect} from 'react'\nimport {Link, useHistory, useParams } from 'react-router-dom';\nimport EmployeeService from '../services/EmployeeService'\n\nconst AddEmployeeComponent = () => {\n\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [emailId, setEmailId] = useState('')\n    const history = useHistory();\n    const {id} = useParams();\n\n    const saveOrUpdateEmployee = (e) => {\n        e.preventDefault();\n\n        const employee = {firstName, lastName, emailId}\n\n        if(id){\n            EmployeeService.updateEmployee(id, employee).then((response) => {\n                history.push('/employees')\n            }).catch(error => {\n                console.log(error)\n            })\n\n        }else{\n            EmployeeService.createEmployee(employee).then((response) =>{\n\n                console.log(response.data)\n    \n                history.push('/employees');\n    \n            }).catch(error => {\n                console.log(error)\n            })\n        }\n        \n    }\n\n    useEffect(() => {\n\n        EmployeeService.getEmployeeById(id).then((response) =>{\n            setFirstName(response.data.firstName)\n            setLastName(response.data.lastName)\n            setEmailId(response.data.emailId)\n        }).catch(error => {\n            console.log(error)\n        })\n    }, [])\n\n    const title = () => {\n\n        if(id){\n            return <h2 className = \"text-center\">Update Employee</h2>\n        }else{\n            return <h2 className = \"text-center\">Add Employee</h2>\n        }\n    }\n\n    return (\n        <div>\n           <br /><br />\n           <div className = \"container\">\n                <div className = \"row\">\n                    <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                       {\n                           title()\n                       }\n                        <div className = \"card-body\">\n                            <form>\n                                <div className = \"form-group mb-2\">\n                                    <label className = \"form-label\"> First Name :</label>\n                                    <input\n                                        type = \"text\"\n                                        placeholder = \"Enter first name\"\n                                        name = \"firstName\"\n                                        className = \"form-control\"\n                                        value = {firstName}\n                                        onChange = {(e) => setFirstName(e.target.value)}\n                                    >\n                                    </input>\n                                </div>\n\n                                <div className = \"form-group mb-2\">\n                                    <label className = \"form-label\"> Last Name :</label>\n                                    <input\n                                        type = \"text\"\n                                        placeholder = \"Enter last name\"\n                                        name = \"lastName\"\n                                        className = \"form-control\"\n                                        value = {lastName}\n                                        onChange = {(e) => setLastName(e.target.value)}\n                                    >\n                                    </input>\n                                </div>\n\n                                <div className = \"form-group mb-2\">\n                                    <label className = \"form-label\"> Email Id :</label>\n                                    <input\n                                        type = \"email\"\n                                        placeholder = \"Enter email Id\"\n                                        name = \"emailId\"\n                                        className = \"form-control\"\n                                        value = {emailId}\n                                        onChange = {(e) => setEmailId(e.target.value)}\n                                    >\n                                    </input>\n                                </div>\n\n                                <button className = \"btn btn-success\" onClick = {(e) => saveOrUpdateEmployee(e)} >Submit </button>\n                                <Link to=\"/employees\" className=\"btn btn-danger\"> Cancel </Link>\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n\n           </div>\n\n        </div>\n    )\n}\n\nexport default AddEmployeeComponent\n","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\ListEmployeeComponent.js",["72"],"import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom/cjs/react-router-dom'\nimport EmployeeService from '../services/EmployeeService'\n\nconst ListEmployeeComponent = () => {\n\n    const [entiteF, setEntiteF] = useState('')\n    const [typeMarcheF, settypeMarcheF] = useState('')\n\n    const [employees, setEmployees] = useState([])\n\n    useEffect(() => {\n\n        getAllEmployees(entiteF,typeMarcheF);\n        setEntiteF(entiteF)\n        settypeMarcheF(typeMarcheF)\n\n    }, [])\n\n    const getAllEmployees = (entiteF,typeMarcheF) => {\n        EmployeeService.getAllEmployees(entiteF,typeMarcheF).then((response) => {\n            setEmployees(response.data)\n            console.log(response.data);\n        }).catch(error =>{\n            console.log(error);\n        })\n    }\n\n    \n\n    const deleteEmployee = (employeeId) => {\n       EmployeeService.deleteEmployee(employeeId).then((response) =>{\n        getAllEmployees();\n\n       }).catch(error =>{\n           console.log(error);\n       })\n        \n    }\n\n    return (\n        <div className = \"container\">\n            <h2 className = \"text-center\"> List Employees </h2>\n            <Link to = \"/add-appelOffre\" className = \"btn btn-primary mb-2\" > Add Employee </Link>\n            {/*  */}\n            <div>\n        <input\n          type=\"text\"\n          name=\"entite\"\n          placeholder=\"Filtrer par Entité\"\n          value = {entiteF}\n          onChange = {(e) => setEntiteF(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          name=\"typeMarche\"\n          placeholder=\"Filtrer par Type de Marché\"\n          value = {typeMarcheF}\n          onChange = {(e) => settypeMarcheF(e.target.value)}\n        />\n      </div>\n            {/*  */}\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                    <th> Employee Id </th>\n                    <th> Employee First Name </th>\n                    <th> Employee Last Name </th>\n                    <th> Employee Email Id </th>\n                    <th> Actions </th>\n                </thead>\n                <tbody>\n                    {\n                        employees.map(\n                            employee =>\n                            <tr key = {employee.id}> \n                                <td> {employee.id} </td>\n                                <td> {employee.firstName} </td>\n                                <td>{employee.lastName}</td>\n                                <td>{employee.emailId}</td>\n                                <td>\n                                    <Link className=\"btn btn-info\" to={`/edit-employee/${employee.id}`} >Update</Link>\n                                    <button className = \"btn btn-danger\" onClick = {() => deleteEmployee(employee.id)}\n                                    style = {{marginLeft:\"10px\"}}> Delete</button>\n                                </td>\n                            </tr>\n                        )\n                    }\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default ListEmployeeComponent\n","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\services\\EmployeeService.js",[],"C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\ListAppelOffreComponent.js",["73"],"import React, {useState, useEffect} from 'react'\r\nimport AppelOffreService from '../services/AppelOffreService'\r\nimport { Link ,useHistory} from 'react-router-dom'\r\n\r\nconst ListAppelOffreComponent = () => {\r\n\r\nconst [entiteF, setEntiteF] = useState('')\r\nconst [typeMarcheF, settypeMarcheF] = useState('')\r\n\r\nconst [appelOffre, setAppelOffre] = useState([])\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n        getAllAppelOffre(entiteF,typeMarcheF);\r\n        \r\n    }, [entiteF, typeMarcheF])\r\n\r\n    const getAllAppelOffre = (entiteF,typeMarcheF) => {\r\n        AppelOffreService.getAllAppelOffre(entiteF,typeMarcheF).then((response) => {\r\n            setAppelOffre(response.data)\r\n            console.log(entiteF);\r\n            console.log(typeMarcheF);\r\n        }).catch(error =>{\r\n            console.log(error);\r\n        })\r\n    } \r\n\r\n   const deleteappelOffre = (appelOffreId) => {\r\n       AppelOffreService.deleteappelOffre(appelOffreId).then((response) =>{\r\n        getAllAppelOffre();\r\n\r\n       }).catch(error =>{\r\n           console.log(error);\r\n       })\r\n        \r\n    }\r\n    const isValidDate = (date) => {\r\n        // Vérifie si la date est valide\r\n        if(date!=null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n      };\r\n\r\n      const history = useHistory();\r\n\r\n\r\n    //   const fetchAppelOffres = (e) => {\r\n    //     e.preventDefault();     \r\n    //     getAllAppelOffre(entiteF,typeMarcheF);\r\n    //             console.log(entiteF)\r\n                  \r\n        \r\n    // }\r\n\r\n  return (\r\n\r\n    \r\n    <div className=\"container-fluid\">\r\n    <h2 className=\"text-center\">List Appel Offre</h2>\r\n\r\n    {/* Filtres */}\r\n    <div className=\"row my-3\">\r\n        <div className=\"col-5\">\r\n            <select\r\n                className=\"form-select\"\r\n                value={entiteF}\r\n                onChange={(e) => setEntiteF(e.target.value)}\r\n            >\r\n                <option selected>ENTITE</option>\r\n                <option value=\"DPF\">DPF</option>\r\n                <option value=\"DGR\">DGR</option>\r\n                <option value=\"DA\">DA</option>\r\n                <option value=\"DDA\">DDA</option>\r\n                <option value=\"DDDA\">DDDA</option>\r\n                <option value=\"DRH\">DRH</option>\r\n                <option value=\"SAICG\">SAICG</option>\r\n                <option value=\"SAICG\">SMG</option>\r\n            </select>\r\n        </div>\r\n        <div className=\"col-5\">\r\n            <select\r\n                className=\"form-select\"\r\n                value={typeMarcheF}\r\n                onChange={(e) => settypeMarcheF(e.target.value)}\r\n            >\r\n                <option selected>TYPE MARCHE</option>\r\n                <option value=\"F\">F</option>\r\n                <option value=\"S\">S</option>\r\n                <option value=\"T\">T</option>\r\n            </select>\r\n        </div>\r\n        <div className=\"col text-end\">\r\n            <Link to=\"/add-appeloffre\" className=\"btn btn-primary\">\r\n                Add Appel Offre\r\n            </Link>\r\n        </div>\r\n    </div>\r\n\r\n    {/* Table */}\r\n    <div className=\"table-responsive\">\r\n        <table className=\"table table-bordered table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th style={{ textAlign: \"center\" }}>N°</th>\r\n                    <th style={{ textAlign: \"center\" }}>Entité</th>\r\n                    <th style={{ textAlign: \"center\" }}>Objet</th>\r\n                    <th style={{ textAlign: \"center\" }}>Type Marché</th>\r\n                    <th style={{ textAlign: \"center\" }}>Estimation</th>\r\n                    <th style={{ textAlign: \"center\" }}>PME</th>\r\n                    <th style={{ textAlign: \"center\" }}>Date de publication Pr</th>\r\n                    <th style={{ textAlign: \"center\" }}>Date d’ouverture Pr</th>\r\n                    <th style={{ textAlign: \"center\" }}>Transmis CE</th>\r\n                    <th style={{ textAlign: \"center\" }}>Observation MC</th>\r\n                    <th style={{ textAlign: \"center\" }}>Date ouverture R</th>\r\n                    <th style={{ textAlign: \"center\" }}>Date jugement</th>\r\n                    <th style={{ textAlign: \"center\" }}>Observations</th>\r\n                    <th style={{ textAlign: \"center\" }}>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {appelOffre.map((appel) => (\r\n                    <tr\r\n                        key={appel.id}\r\n                        style={{\r\n                            backgroundColor: isValidDate(appel.dateOuvertureReelle)\r\n                                ? \"green\"\r\n                                : \"white\",\r\n                        }}\r\n                    >\r\n                        <td>{appel.numero}</td>\r\n                        <td>{appel.entite}</td>\r\n                        <td>{appel.objet}</td>\r\n                        <td>{appel.typeMarche}</td>\r\n                        <td>{appel.estimation}</td>\r\n                        <td>{appel.pme}</td>\r\n                        <td>{appel.moisPublicationPrevisionnelle}</td>\r\n                        <td>{appel.dateOuverturePrevisionnelle}</td>\r\n                        <td>{appel.datetransmisCe}</td>\r\n                        <td>{appel.dateobservationMc}</td>\r\n                        <td>{appel.dateOuvertureReelle}</td>\r\n                        <td>{appel.dateJugement}</td>\r\n                        <td>{appel.observations}</td>\r\n                        <td style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                                <Link\r\n                                    className=\"btn btn-info\"\r\n                                    style={{\r\n                                        marginLeft: \"10px\",\r\n                                        fontSize: \"10px\",\r\n                                        width: \"40px\",\r\n                                        paddingLeft: \"4px\",\r\n                                        height: \"30px\",\r\n                                    }}\r\n                                    to={`/edit-employee/${appel.id}`}\r\n                                >\r\n                                    Update\r\n                                </Link>\r\n\r\n                                <button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={() => deleteappelOffre(appel.id)}\r\n                                    style={{\r\n                                        marginLeft: \"10px\",\r\n                                        fontSize: \"10px\",\r\n                                        width: \"40px\",\r\n                                        paddingLeft: \"4px\",\r\n                                        height: \"30px\",\r\n                                    }}\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </td>\r\n\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default ListAppelOffreComponent","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\services\\AppelOffreService.js",[],"C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\AddAppelOffreComponent.js",["74","75"],"import React, {useState, useEffect} from 'react'\r\nimport {Link, useHistory, useParams } from 'react-router-dom';\r\nimport EmployeeService from '../services/EmployeeService'\r\nimport AppelOffreService from '../services/AppelOffreService';\r\n\r\nconst AddAppelOffreComponent = () => {\r\n\r\n    const [numero, setNumero] = useState('')\r\n    const [entite, setEntite] = useState('')\r\n    const [objet, setObjet] = useState('')\r\n    const [typeMarche, settypeMarche] = useState('')\r\n    const [estimation, setEstimation] = useState('')\r\n    const [pme, setPme] = useState('')\r\n    // \r\n    const [moisPublicationPrevisionnelle\t, setMoisPublicationPrevisionnelle] = useState('')\r\n    const [dateOuverturePrevisionnelle\t, setDateOuverturePrevisionnelle] = useState('')\r\n    //   \r\n    const [datetransmisCe, setDatetransmisCe] = useState('')\r\n    const [dateobservationMc\t, setDateobservationMc] = useState('')\r\n    const [dateOuvertureReelle\t, setDateOuvertureReelle] = useState('')\r\n    const [observations\t, set0bservations] = useState('')\r\n    const [dateJugement\t, setDateJugement] = useState('')\r\n\r\n    const history = useHistory();\r\n    const {id} = useParams();\r\n\r\n    const saveOrUpdatedAppelOffre = (e) => {\r\n        e.preventDefault();\r\n\r\n        const appelOffre = {numero, entite, objet,typeMarche,estimation,pme,moisPublicationPrevisionnelle,dateOuverturePrevisionnelle,datetransmisCe,dateobservationMc,dateOuvertureReelle,dateJugement,observations}\r\n\r\n        if(id){\r\n            AppelOffreService.updateappelOffre(id, appelOffre).then((response) => {\r\n                console.log(response.data.numero)\r\n                history.push('/appelOffres')\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n        }else{\r\n            AppelOffreService.createAppelOffre(appelOffre).then((response) =>{\r\n\r\n                console.log(response.data.numero)\r\n    \r\n                history.push('/appelOffres');\r\n    \r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        AppelOffreService.getappelOffreById(id).then((response) =>{\r\n            setNumero(response.data.numero)\r\n            setEntite(response.data.entite)\r\n            setObjet(response.data.objet)\r\n            settypeMarche(response.data.typeMarche)\r\n            setEstimation(response.data.estimation)\r\n            setPme(response.data.pme)\r\n            //\r\n            setMoisPublicationPrevisionnelle(response.data.moisPublicationPrevisionnelle)\r\n            setDateOuverturePrevisionnelle(response.data.dateOuverturePrevisionnelle)\r\n            // \r\n            setDatetransmisCe(response.data.datetransmisCe)\r\n            setDateobservationMc(response.data.dateobservationMc)\r\n            setDateOuvertureReelle(response.data.dateOuvertureReelle)\r\n            setDateJugement(response.data.dateJugement)\r\n            set0bservations(response.data.observations)\r\n\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }, [])\r\n\r\n    const title = () => {\r\n\r\n        if(id){\r\n            return <h2 className = \"text-center\">Update Appel Offre</h2>\r\n        }else{\r\n            return <h2 className = \"text-center\">Add Appel Offre</h2>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           <br /><br />\r\n           <div className = \"container\">\r\n                <div className = \"row\">\r\n                    <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                       {\r\n                           title()\r\n                       }\r\n                        <div className = \"card-body\">\r\n                            <form>\r\n                                <div className = \"form-group mb-2\">\r\n                                    <label className = \"form-label\"> Numero d'appel d'offre :</label>\r\n                                    <input\r\n                                        type = \"text\"\r\n                                        placeholder = \"Enter Numero d'appel d'offre\"\r\n                                        name = \"numero\"\r\n                                        className = \"form-control\"\r\n                                        value = {numero}\r\n                                        onChange = {(e) => setNumero(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className = \"form-group mb-2\">\r\n                                    <label className = \"form-label\"> Entité :</label>\r\n                                        <select\r\n                                        className=\"form-select\"\r\n                                        value = {entite}\r\n                                        onChange = {(e) => setEntite(e.target.value)}                                    >\r\n                                        <option selected>ENTITE</option>\r\n                                        <option value=\"DPF\">DPF</option>\r\n                                        <option value=\"DGR\">DGR</option>\r\n                                        <option value=\"DA\">DA</option>\r\n                                        <option value=\"DDA\">DDA</option>\r\n                                        <option value=\"DDDA\">DDDA</option>\r\n                                        <option value=\"DRH\">DRH</option>\r\n                                        <option value=\"SAICG\">SAICG</option>\r\n                                        <option value=\"SAICG\">SMG</option>\r\n                                    </select>                                   \r\n                                </div>\r\n\r\n                                <div className = \"form-group mb-2\">\r\n                                    <label className = \"form-label\"> Objet :</label>\r\n                                    <input\r\n                                        type = \"text\"\r\n                                        placeholder = \"Enter Objet\"\r\n                                        name = \"Objet\"\r\n                                        className = \"form-control\"\r\n                                        value = {objet}\r\n                                        onChange = {(e) => setObjet(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className = \"form-group mb-2\">\r\n                                    <label className = \"form-label\"> Type Marché :</label>                                  \r\n\r\n                                        <select\r\n                                        className=\"form-select\"\r\n                                        value = {typeMarche}\r\n                                        onChange = {(e) => settypeMarche(e.target.value)}\r\n                                    >\r\n                                        <option selected>TYPE MARCHE</option>\r\n                                        <option value=\"F\">F</option>\r\n                                        <option value=\"S\">S</option>\r\n                                        <option value=\"T\">T</option>\r\n                                    </select>\r\n                                  \r\n                                </div>\r\n\r\n                                <div className = \"form-group mb-2\">\r\n                                    <label className = \"form-label\"> Estimation :</label>\r\n                                    <input\r\n                                        type = \"number\"\r\n                                        placeholder = \"Enter Estimation\"\r\n                                        name = \"Estimation\"\r\n                                        className = \"form-control\"\r\n                                        value = {estimation}\r\n                                        onChange = {(e) => setEstimation(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className = \"form-group mb-2\">\r\n                                    <label className = \"form-label\"> PME :</label>\r\n                                    <input\r\n                                        type = \"text\"\r\n                                        placeholder = \"Enter PME\"\r\n                                        name = \"PME\"\r\n                                        className = \"form-control\"\r\n                                        value = {pme}\r\n                                        onChange = {(e) => setPme(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className = \"form-group mb-2\">\r\n                                    <label className = \"form-label\"> Date de publication Prévisionnelle\t :</label>\r\n                                    <input\r\n                                        type = \"date\"\r\n                                        placeholder = \"Date de publication Prévisionnelle\"\r\n                                        name = \"moisPublicationPrevisionnelle\"\r\n                                        className = \"form-control\"\r\n                                        value = {moisPublicationPrevisionnelle}\r\n                                        onChange = {(e) => setMoisPublicationPrevisionnelle(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className = \"form-group mb-2\">\r\n                                    <label className = \"form-label\"> DATE D’OUVERTURE Prévisionnelle :</label>\r\n                                    <input\r\n                                        type = \"date\"\r\n                                        placeholder = \"DATE D’OUVERTURE Prévisionnelle\"\r\n                                        name = \"DateJugement\"\r\n                                        className = \"form-control\"\r\n                                        value = {dateOuverturePrevisionnelle}\r\n                                        onChange = {(e) => setDateOuverturePrevisionnelle(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className = \"form-group mb-2\">\r\n                                    <label className = \"form-label\"> Transmis CE :</label>\r\n                                    <input\r\n                                        type = \"date\"\r\n                                        placeholder = \"Date Transmis CE\"\r\n                                        name = \"Observations\"\r\n                                        className = \"form-control\"\r\n                                        value = {datetransmisCe}\r\n                                        onChange = {(e) => setDatetransmisCe(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n                                <div className = \"form-group mb-2\">\r\n                                    <label className = \"form-label\"> Observation MC :</label>\r\n                                    <input\r\n                                        type = \"date\"\r\n                                        placeholder = \"Date Observation MC\"\r\n                                        name = \"dateobservationMc\"\r\n                                        className = \"form-control\"\r\n                                        value = {dateobservationMc}\r\n                                        onChange = {(e) => setDateobservationMc(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n                                <div className = \"form-group mb-2\">\r\n                                    <label className = \"form-label\"> Date ouverture Reelle:</label>\r\n                                    <input\r\n                                        type = \"date\"\r\n                                        placeholder = \"Date ouverture Reelle\"\r\n                                        name = \"dateOuvertureReelle\"\r\n                                        className = \"form-control\"\r\n                                        value = {dateOuvertureReelle}\r\n                                        onChange = {(e) => setDateOuvertureReelle(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n                                <div className = \"form-group mb-2\">\r\n                                    <label className = \"form-label\"> Date jugement\t:</label>\r\n                                    <input\r\n                                        type = \"date\"\r\n                                        placeholder = \"Date jugement\"\r\n                                        name = \"dateJugement\"\r\n                                        className = \"form-control\"\r\n                                        value = {dateJugement}\r\n                                        onChange = {(e) => setDateJugement(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n                                <div className = \"form-group mb-2\">\r\n                                    <label className = \"form-label\"> OSERVATIONS:</label>\r\n                                    <input\r\n                                        type = \"text\"\r\n                                        placeholder = \"Enter OSERVATIONS\"\r\n                                        name = \"observations\"\r\n                                        className = \"form-control\"\r\n                                        value = {observations}\r\n                                        onChange = {(e) => set0bservations(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n                                        <div>\r\n                                \r\n                                <Link to=\"/appelOffres\"   className=\"btn btn-danger\"> Cancel </Link>\r\n                                <button className = \"btn btn-success\" style={{ marginLeft: \"30px\" }} onClick = {(e) => saveOrUpdatedAppelOffre(e)} >Submit </button>\r\n                                       </div>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n           </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddAppelOffreComponent\r\n","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\DashboardAppelOffreComponent.js",["76","77"],"import React, {useState, useEffect} from 'react'\r\nimport AppelOffreService from '../services/AppelOffreService'\r\nimport { Link ,useHistory} from 'react-router-dom'\r\n\r\n\r\nconst DashboardAppelOffreComponent = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n    \r\n      useEffect(() => {\r\n        \r\n            getdashboard();\r\n            \r\n        }, [])\r\n\r\n        const getdashboard = () => {\r\n            AppelOffreService.getdashboard().then((response) => {\r\n                setData(response.data)\r\n            }).catch(error =>{\r\n                console.log(error);\r\n            })\r\n        } \r\n\r\n\r\n      return (\r\n    \r\n        \r\n        <div className=\"container-fluid\">\r\n        <h2 className=\"text-center\">Tableau de Bord - Appels d'Offres</h2>\r\n\r\n    <br></br>\r\n        {/* Table */}\r\n        <div className=\"table-responsive\">\r\n            <table className=\"table table-bordered table-striped ff\">\r\n               <thead>\r\n                <tr >\r\n                    <th >ENTITE</th>\r\n                    <th>Appel d’offres à lancer</th>\r\n                    <th>Appel d’offres transmis au CE</th>\r\n                    <th>Appel d’offres lancé</th>\r\n                    {/* <th>Appel d’offres en cours D'examen</th> */}\r\n                    <th>Appel d’offres jugé</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n          {data.map((row, index) => (\r\n            <tr  key={index}>\r\n              <td className=\"header-entite\">{row.entite}</td>\r\n              <td>{row.appelOffresALancer}</td>\r\n              <td>{row.appelOffresTransmisCe}</td>\r\n              <td>{row.appelOffresLance}</td>\r\n              {/* <td>{row.appelOffresEnCoursExamen}</td> */}\r\n              <td>{row.appelOffresJuge}</td>\r\n            </tr>\r\n          ))}\r\n                </tbody>\r\n                <tfoot>\r\n                <tr className=\"footer-row\">\r\n                    <td>Total</td>\r\n                    <td>{data.reduce((sum, row) => sum + row.appelOffresALancer, 0)}</td>\r\n                    <td>{data.reduce((sum, row) => sum + row.appelOffresTransmisCe, 0)}</td>\r\n                    <td>{data.reduce((sum, row) => sum + row.appelOffresLance, 0)}</td>\r\n                    {/* <td>{data.reduce((sum, row) => sum + row.appelOffresEnCoursExamen, 0)}</td> */}\r\n                    <td>{data.reduce((sum, row) => sum + row.appelOffresJuge, 0)}</td>\r\n                </tr>\r\n                </tfoot>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    \r\n      )\r\n}\r\n\r\nexport default DashboardAppelOffreComponent","C:\\Users\\user\\Downloads\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main\\react-hooks-frontend\\src\\components\\LoginComponent.js",["78","79"],"import axios from 'axios';\r\nimport React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport AppelOffreService from '../services/AppelOffreService';\r\n\r\nconst LoginComponent = () => {\r\n\r\n\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const history = useHistory(); // Hook pour naviguer\r\n\r\n    const user = {username, password}; \r\n\r\n\r\n    const loginf = (e) => {\r\n        e.preventDefault();\r\n\r\n        const utilisateuropt = {username, password}\r\n\r\n    \r\n            AppelOffreService.login(utilisateuropt).then((response) => {\r\n                console.log(response.data)\r\n                if(response.data){\r\n                    history.push('/appelOffres')\r\n                }else{\r\nsetMessage(\"mot de pass ou username incorct\")\r\n                }\r\n               \r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n        \r\n        \r\n    }\r\n\r\n  return (\r\n\r\n    \r\n    <div className=\"login-container\">\r\n        <br></br>\r\n        \r\n      <h2>Connexion</h2>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label>Nom d'utilisateur</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Mot de passe</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button\r\n          className=\"btn btn-success\"\r\n          onClick={(e) => loginf(e)}\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n      <br></br>\r\n      {message && <p style={{ color: \"red\" }}>{message}</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginComponent\r\n",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":23},{"ruleId":"84","severity":1,"message":"88","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":29},{"ruleId":"84","severity":1,"message":"89","line":6,"column":8,"nodeType":"86","messageId":"87","endLine":6,"endColumn":28},{"ruleId":"84","severity":1,"message":"90","line":10,"column":10,"nodeType":"86","messageId":"87","endLine":10,"endColumn":18},{"ruleId":"84","severity":1,"message":"91","line":15,"column":9,"nodeType":"86","messageId":"87","endLine":15,"endColumn":24},{"ruleId":"84","severity":1,"message":"92","line":2,"column":16,"nodeType":"86","messageId":"87","endLine":2,"endColumn":26},{"ruleId":"93","severity":1,"message":"94","line":48,"column":8,"nodeType":"95","endLine":48,"endColumn":10,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":18,"column":8,"nodeType":"95","endLine":18,"endColumn":10,"suggestions":"98"},{"ruleId":"84","severity":1,"message":"99","line":47,"column":13,"nodeType":"86","messageId":"87","endLine":47,"endColumn":20},{"ruleId":"84","severity":1,"message":"100","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":23},{"ruleId":"93","severity":1,"message":"94","line":76,"column":8,"nodeType":"95","endLine":76,"endColumn":10,"suggestions":"101"},{"ruleId":"84","severity":1,"message":"102","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":14},{"ruleId":"84","severity":1,"message":"92","line":3,"column":16,"nodeType":"86","messageId":"87","endLine":3,"endColumn":26},{"ruleId":"84","severity":1,"message":"103","line":1,"column":8,"nodeType":"86","messageId":"87","endLine":1,"endColumn":13},{"ruleId":"84","severity":1,"message":"104","line":15,"column":11,"nodeType":"86","messageId":"87","endLine":15,"endColumn":15},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'FooterComponent' is defined but never used.","Identifier","unusedVar","'ListEmployeeComponent' is defined but never used.","'AddEmployeeComponent' is defined but never used.","'Redirect' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["107"],"React Hook useEffect has missing dependencies: 'entiteF' and 'typeMarcheF'. Either include them or remove the dependency array. You can also do a functional update 'setEntiteF(e => ...)' if you only need 'entiteF' in the 'setEntiteF' call.",["108"],"'history' is assigned a value but never used.","'EmployeeService' is defined but never used.",["109"],"'Link' is defined but never used.","'axios' is defined but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"110","fix":"114"},"Update the dependencies array to be: [id]",{"range":"115","text":"116"},"Update the dependencies array to be: [entiteF, typeMarcheF]",{"range":"117","text":"118"},{"range":"119","text":"116"},[1371,1373],"[id]",[504,506],"[entiteF, typeMarcheF]",[3040,3042]]